apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

// Add checkstyle, findbugs, pmd and lint to the check task.
check.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'

def configDir = "${project.rootDir}/config/quality"
def reportsDir = "${project.buildDir}/reports"

//checkstyle {
//    toolVersion = '8.10'
//    configFile file("config/quality/checkstyle/checkstyle.xml")
//}

task checkstyle(type: Checkstyle, group: 'Verification', description: 'Runs code style checks') {
    checkstyle.toolVersion = '8.10'
    configFile file("${configDir}/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("${configDir}/checkstyle/suppressions.xml"
    ).absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
    }

    classpath = files()
}

task findbugs(type: FindBugs, group: 'Verification', description: 'Inspect java bytecode for bugs',
        dependsOn: ['compileDebugSources', 'compileReleaseSources']) {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${configDir}/findbugs/findbugs-filter.xml")
    classes = files("${project.rootDir}/app/build/intermediates/javac")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
//        xml {
//            destination = file("${reportsDir}/findbugs/findbugs.xml")
//        }
//        html {
//            destination = new File("${reportsDir}/findbugs/findbugs.html")
//        }
    }

    classpath = files()
}

task pmd(type: Pmd, group: 'Verification', description: 'Inspect sourcecode for bugs') {
    ignoreFailures = false
    ruleSetFiles = files("$configDir/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
//        xml {
//            destination = new File("${reportsDir}/pmd/pmd.xml")
//        }
//        html {
//            destination = new File("${reportsDir}/pmd/pmd.html")
//        }
    }
}

android {
    lintOptions {
        abortOnError true
        xmlReport false
        htmlReport true
        lintConfig file("$configDir/lint/lint.xml")
        htmlOutput file("$reportsDir/lint/lint-result.html")
        xmlOutput file("$reportsDir/lint/lint-result.xml")
    }
}